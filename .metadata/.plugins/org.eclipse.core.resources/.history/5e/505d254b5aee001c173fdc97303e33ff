 
 /*------------------------------------------------------------------------
    File        : CardDeck
    Purpose     : 
    Syntax      : 
    Description : 
    Author(s)   : zdelcoco
    Created     : Tue Jun 14 11:00:07 CDT 2022
    Notes       : 
  ----------------------------------------------------------------------*/

USING Progress.Lang.*.

BLOCK-LEVEL ON ERROR UNDO, THROW.

CLASS CardDeck INHERITS CardPile: 
  
  DEFINE PUBLIC VARIABLE oDeck AS CLASS Card EXTENT 110 NO-UNDO.
  
  DEFINE PROPERTY iNumCards AS INTEGER NO-UNDO
    GET.
    PRIVATE SET.
              
  CONSTRUCTOR PUBLIC CardDeck (): 
    SUPER().         
    THIS-OBJECT:fill().  
  END CONSTRUCTOR.  
  
  METHOD PROTECTED VOID fill():
    DEFINE VARIABLE iCardGroup AS INTEGER NO-UNDO.     
    
    DO iCardGroup = 1 TO 10:                      
      oDeck[iCardGroup]      = NEW Card("Piggy Bank", 5000).         
      oDeck[iCardGroup + 10] = NEW Card("Cash Under The Mattress", 5000).
      oDeck[iCardGroup + 20] = NEW Card("Baseball Cards", 5000).                   
      oDeck[iCardGroup + 30] = NEW Card("Stamp Collection", 5000).
      oDeck[iCardGroup + 40] = NEW Card("Coin Collection", 5000).
      oDeck[iCardGroup + 50] = NEW Card("Bank Account", 10000).
      oDeck[iCardGroup + 60] = NEW Card("Stocks", 10000).
      oDeck[iCardGroup + 70] = NEW Card("Classic Auto", 15000).
      oDeck[iCardGroup + 80] = NEW Card("Jewels", 15000).  

      IF iCardGroup <= 8 THEN
      DO:
        oDeck[iCardGroup + 90] = NEW Card("Home", 20000).
        oDeck[iCardGroup + 98] = NEW Card("Silver", 25000). 
      END.      

      IF iCardGroup <= 4 THEN
      DO:   
        oDeck[iCardGroup + 106] = NEW Card("Gold", 50000).    
      END.            
    END.     
    
    iNumCards = 110.   
  END METHOD.  
  
  METHOD PRIVATE INTEGER getRandomNumber():
    RETURN INTEGER(ROUND(TIME / DAY(TODAY),0 )).
  END.
  
  METHOD PUBLIC VOID shuffle():
    DEFINE VARIABLE itx AS INTEGER NO-UNDO.
    
    DO itx = 1 TO getRandomNumber():
      THIS-OBJECT:shuffleCards().
    END.    
  END.
  
  METHOD PUBLIC VOID shuffleCards():
    DEFINE VARIABLE iNextCardInDeck AS INTEGER NO-UNDO.
    DEFINE VARIABLE iRandomDeckIndex AS INTEGER NO-UNDO.    
    DEFINE VARIABLE oTempCard AS CLASS Card NO-UNDO.
    
    DO iNextCardInDeck = 1 TO iNumCards:
      iRandomDeckIndex        = IF iNextCardInDeck = iNumCards 
                                  THEN iNextCardInDeck
                                ELSE
                                  RANDOM(iNextCardInDeck, iNumCards).
      oTempCard               = oDeck[iNextCardInDeck].
      oDeck[iNextCardInDeck]  = oDeck[iRandomDeckIndex].
      oDeck[iRandomDeckIndex] = oTempCard.
    END.    
  END.
  
  METHOD PUBLIC Card deal():
    DEFINE VARIABLE iNumCardsHold AS INTEGER NO-UNDO.
    IF iNumCards = 0 THEN RETURN ?.
    iNumCardsHold = iNumCards.  // hold on to value because we can't 
    iNumCards = iNumCards - 1.  // decrement after returning value
    RETURN THIS-OBJECT:oDeck[iNumCardsHold].
  END METHOD.

  DESTRUCTOR PUBLIC CardDeck():
  END DESTRUCTOR.

END CLASS.